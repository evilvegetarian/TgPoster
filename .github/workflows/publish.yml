name: Build and deploy api and hosted

on:
  push:
    branches: [  master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push tgposter-worker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: TgPoster.Worker/Dockerfile
          push: true
          tags: ghcr.io/evilvegetarian/tgposter-worker:latest

      - name: Build and push tgposter-api
        uses: docker/build-push-action@v5
        with:
          context: .
          file: TgPoster.API/Dockerfile
          push: true
          tags: ghcr.io/evilvegetarian/tgposter-api:latest

      - name: Upload docker-compose.worker.yml
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose-worker
          path: docker/docker-compose.worker.yml

      - name: Upload docker-compose.api.yml
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose-api
          path: docker/docker-compose.api.yml
  
  deploy-hosted:
    needs: [build-and-push]
    runs-on: [self-hosted, hostedrunner]
    
    steps:
    - name: Download docker-compose.worker.yml
      uses: actions/download-artifact@v4
      with:
        name: docker-compose-worker
        path: /home/dev/
          
    - name: Download docker-compose.api.yml
      uses: actions/download-artifact@v4
      with:
        name: docker-compose-api
        path: /home/dev/

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Pull latest image and restart container
      run: |
        cd /home/dev/       
        export TGPOSTER_WORKER_CONNECTIONSTRING='${{ secrets.API_CONNECTIONSTRING }}'
        export TELEGRAM_API_ID='${{ secrets.API_ID }}'
        export TELEGRAM_API_HASH='${{ secrets.API_HASH }}'
        export TELEGRAM_PHONE_NUMBER='${{ secrets.PHONE_NUMBER }}'
        export TGPOSTER_WORKER_LOGSURL='${{ secrets.LOGSURL }}'
        docker compose -f docker-compose.worker.yml pull
        docker compose -f docker-compose.worker.yml up -d

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Pull latest image and restart container
      run: |
        cd /home/dev/
        export TGPOSTER_API_CONNECTIONSTRING='${{ secrets.WORKER_CONNECTIONSTRING }}'
        export TGPOSTER_API_LOGSURL='${{ secrets.LOGSURL }}'
        docker compose -f docker-compose.api.yml pull
        docker compose -f docker-compose.api.yml up -d

    - name: Clean up old docker images and containers
      if: always() 
      run: |
        docker container prune -f
        docker image prune -a -f